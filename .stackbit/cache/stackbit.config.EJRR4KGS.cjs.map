{
  "version": 3,
  "sources": ["../../stackbit.config.ts"],
  "sourcesContent": ["import { defineStackbitConfig } from '@stackbit/types';\nimport { GitContentSource } from '@stackbit/cms-git';\n\nexport default defineStackbitConfig({\n    stackbitVersion: '~0.6.0',\n    ssgName: 'custom',\n    nodeVersion: '18',\n    contentSources: [\n        new GitContentSource({\n            rootPath: __dirname,\n            contentDirs: ['content/pages'],\n            assetsConfig: {\n                referenceType: 'static',\n                staticDir: 'public',\n                uploadDir: 'images',\n                publicPath: '/',\n                staticPath: '/images'\n            },\n            models: [\n                {\n                    name: 'discipline',\n                    type: 'page',\n                    urlPath: '/{id}',\n                    filePath: 'content/pages/{id}.json',\n                    label: 'Discipline',\n                    fields: [\n                        { name: 'id', type: 'string', required: true },\n                        { name: 'title', type: 'string', required: true },\n                        { name: 'description', type: 'string' },\n                        {\n                            name: 'compositions',\n                            type: 'list',\n                            items: {\n                                type: 'object',\n                                fields: [\n                                    { name: 'id', type: 'string', required: true },\n                                    { name: 'title', type: 'string', required: true },\n                                    { name: 'description', type: 'string' },\n                                    {\n                                        name: 'sections',\n                                        type: 'list',\n                                        items: {\n                                            type: 'object',\n                                            fields: [\n                                                { name: 'id', type: 'string', required: true },\n                                                { name: 'title', type: 'string', required: true },\n                                                { name: 'content', type: 'markdown' }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            ]\n        })\n    ]\n});"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqC;AACrC,qBAAiC;AAEjC,IAAO,8BAAQ,mCAAqB;AAAA,EAChC,iBAAiB;AAAA,EACjB,SAAS;AAAA,EACT,aAAa;AAAA,EACb,gBAAgB;AAAA,IACZ,IAAI,gCAAiB;AAAA,MACjB,UAAU;AAAA,MACV,aAAa,CAAC,eAAe;AAAA,MAC7B,cAAc;AAAA,QACV,eAAe;AAAA,QACf,WAAW;AAAA,QACX,WAAW;AAAA,QACX,YAAY;AAAA,QACZ,YAAY;AAAA,MAChB;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,UACI,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,UAAU;AAAA,UACV,OAAO;AAAA,UACP,QAAQ;AAAA,YACJ,EAAE,MAAM,MAAM,MAAM,UAAU,UAAU,KAAK;AAAA,YAC7C,EAAE,MAAM,SAAS,MAAM,UAAU,UAAU,KAAK;AAAA,YAChD,EAAE,MAAM,eAAe,MAAM,SAAS;AAAA,YACtC;AAAA,cACI,MAAM;AAAA,cACN,MAAM;AAAA,cACN,OAAO;AAAA,gBACH,MAAM;AAAA,gBACN,QAAQ;AAAA,kBACJ,EAAE,MAAM,MAAM,MAAM,UAAU,UAAU,KAAK;AAAA,kBAC7C,EAAE,MAAM,SAAS,MAAM,UAAU,UAAU,KAAK;AAAA,kBAChD,EAAE,MAAM,eAAe,MAAM,SAAS;AAAA,kBACtC;AAAA,oBACI,MAAM;AAAA,oBACN,MAAM;AAAA,oBACN,OAAO;AAAA,sBACH,MAAM;AAAA,sBACN,QAAQ;AAAA,wBACJ,EAAE,MAAM,MAAM,MAAM,UAAU,UAAU,KAAK;AAAA,wBAC7C,EAAE,MAAM,SAAS,MAAM,UAAU,UAAU,KAAK;AAAA,wBAChD,EAAE,MAAM,WAAW,MAAM,WAAW;AAAA,sBACxC;AAAA,oBACJ;AAAA,kBACJ;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AACJ,CAAC;",
  "names": []
}
